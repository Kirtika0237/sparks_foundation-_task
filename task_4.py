# -*- coding: utf-8 -*-
"""TASK_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfySrgCd7URUzcm4Qp-Smbcv3G8j-dob

Task 4: Exploratory Data Analysis(EDA) on Global terrorism

In this task we have to find out thr hot zone of terrorism. Derive security issues snd insights by EDA.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#reading the data
data1=pd.read_csv('globalterrorismdb_0718dist.csv',encoding='latin1')
data1.head()

#dimensions of data
data1.shape

data1.describe()

numeric_data1 = data1.select_dtypes(include='number')

# Correlation plot of the numeric columns
fig, axes = plt.subplots(1, 1, figsize=(20, 10))
sns.heatmap(numeric_data1.corr())
plt.show()

"""Histogram of data"""

data1.hist(figsize=(22,24))
plt.show()

"""plot of suicide and success by attacktype and property

"""

# import matplotlib.pyplot as plt
fig, axes = plt.subplots(1, 2, figsize=(15, 5))
data1.groupby('attacktype1_txt')[['suicide', 'success']].agg('sum').plot(kind='bar', ax=axes[0])
data1.groupby('property')[['suicide', 'success']].agg('sum').plot(kind='bar', ax=axes[1])
plt.xticks(rotation=0)
plt.show()

"""plotting for weapon type vs traget type"""

sns.barplot(y=data1['targtype1'], x=data1['weaptype1'], palette='husl')
plt.title("Weapon Type vs Target Type")
plt.xlabel("Weapon Type")
plt.ylabel("Target Type")
plt.show()

"""Subplots for count of success and vicinity

"""

fig, axes = plt.subplots(1, 2, figsize=(15, 5))
sns.countplot(data=data1, x='success', ax=axes[0], palette='Blues')
sns.countplot(data=data1, x='vicinity', ax=axes[1], palette='Oranges')
plt.show()

"""plot for successful and unsucessful attack"""

plt.figure(figsize=(15, 10))
sns.countplot(data=data1, x='iyear', hue='success')
plt.xticks(rotation=90)
plt.title('Year VS success')
plt.show()

#count of attcks of most active terrorist groups
data1.gname.value_counts()[1:10]

"""plot of 15 highest terror attck groups"""

plt.figure(figsize=(10, 8))
sns.barplot(x=data1['gname'].value_counts()[1:16].values, y=data1['gname'].value_counts()[1:16].index, palette='inferno')
plt.title('Terrorist Organizations with the Highest Terror Attacks')
plt.xlabel('Number of Attacks', fontsize=15)
plt.ylabel('Terrorist Group Name', fontsize=15)
plt.show()

#count of attack in 10 most affected countries
attack=data1.country_txt.value_counts()[:10]
attack

"""Top 15 countries affected by terrorist attack"""

plt.figure(figsize=(15, 10))
sns.barplot(x=data1['country_txt'].value_counts()[:15].index, y=data1['country_txt'].value_counts()[:15].values)
plt.xticks(rotation=90)
plt.title('Top 15 Most Affected Countries by Terrorist Attacks')
plt.xlabel('Countries')
plt.ylabel('Number of Attacks')
plt.show()

"""we can clearly see that the United kingdom is most affected country."""

region_counts = data1['region_txt'].value_counts()

# Create a color palette with different colors for each bar
colors = sns.color_palette('husl', len(region_counts))

plt.figure(figsize=(15, 12))
plt.xticks(rotation=360)
sns.barplot(x=region_counts.values, y=region_counts.index, palette=colors)
plt.title('Top regions affected by terrorism')
plt.show()

#plot for most affected cities by terrorism
plt.figure(figsize=(15, 12))
plt.bar(x=data1['city'].value_counts()[:20].index, height=data1['city'].value_counts()[:20])
plt.xticks(rotation=90)
plt.title('Top 20 cities affected by terrorism')
plt.xlabel('City')
plt.ylabel('Number of terrorist incidents')
plt.show()

unique_years = sorted(data1['iyear'].unique())

plt.figure(figsize=(15, 12))
sns.countplot(x=data1['iyear'], order=unique_years, palette='tab10')
plt.title('Terror attacks distribution based on year')
plt.xlabel('Attacking year', fontsize=14)
plt.ylabel('Number of attacks', fontsize=14)
plt.xticks(rotation=45)
plt.show()

#plotting the terrorist activities by region
pd.crosstab(data1.iyear,data1.region_txt).plot(kind='area',stacked=False,figsize=(20,10))
plt.title('Terrorist activites by region in eaxh year')
plt.xlabel('Year',fontsize=20)
plt.ylabel('Number of attacks',fontsize=20)
plt.show()

plt.figure(figsize=(10, 6))
sns.countplot(data=data1, x='attacktype1_txt', palette='rainbow', order=data1['attacktype1_txt'].value_counts().index)
plt.title('Types of attacks used by terrorists')
plt.xlabel('Types of attacks', fontsize=12)
plt.ylabel('Number of attacks', fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# number of deaths based on type of attack
plt.figure(figsize=(12, 8))
sns.countplot(data=data1, x='attacktype1_txt', order=data1['attacktype1_txt'].value_counts().index, palette='viridis')
plt.title('Number of Deaths Based on Type of Attack', fontsize=16)
plt.xlabel('Type of Attack', fontsize=14)
plt.ylabel('Number of Deaths', fontsize=14)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

#attacks per year based on target
plt.figure(figsize=(12, 8))
sns.countplot(data=data1, x='targtype1_txt', palette='flare', order=data1['targtype1_txt'].value_counts().index)
plt.xticks(rotation=90)
plt.title('Attacks per year based on target')
plt.xlabel('Target', fontsize=12)
plt.ylabel('Number of attacks', fontsize=12)
plt.tight_layout()
plt.show()

# Grouping data by year and summing the number of kills for each year
kills_per_year = data1.groupby('iyear')['nkill'].sum()

plt.figure(figsize=(12, 8))
sns.lineplot(x=kills_per_year.index, y=kills_per_year.values, marker='o', color='blue')
plt.title('Number of people killed over the years', fontsize=16)
plt.xlabel('Year', fontsize=14)
plt.ylabel('Number of people killed', fontsize=14)
plt.xticks(rotation=45)
plt.grid(True)
plt.tight_layout()
plt.show()